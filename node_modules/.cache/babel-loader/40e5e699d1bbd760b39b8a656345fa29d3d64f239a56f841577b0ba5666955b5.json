{"ast":null,"code":"var _jsxFileName = \"/Users/samticknor/Portfolio-Site/src/App.js\",\n  _s = $RefreshSig$();\n// React\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, HashRouter, Route } from \"react-router-dom\";\n\n// Helmet\nimport Helmet from \"react-helmet\";\n\n// Screens\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport PageInstallation from \"./components/PageInstallation\";\nimport PageProcess from \"./components/PageProcess\";\nimport PageCollections from \"./components/PageCollections\";\nimport PageDateCollections from \"./components/PageDateCollections\";\nimport PageAbout from \"./components/PageAbout\";\nimport PageContact from \"./components/PageContact\";\nimport PageCV from \"./components/PageCV\";\n\n// Style\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // Site-Wide State\n  const [siteTitle, setSiteTitle] = useState(\"Sam Ticknor\");\n  const [siteFavicon, setSiteFavicon] = useState(\"ðŸ”…\");\n  const [homeSplashImages, setHomeSplashImages] = useState([]);\n  const [collections, setCollections] = useState([]);\n  const [dateCollections, setDateCollections] = useState({});\n  const [processPosts, setProcessPosts] = useState([]);\n  const [allWorksById, setAllWorksById] = useState({});\n  const [installations, setInstallations] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // AIRTABLE CONTENT\n  var Airtable = require(\"airtable\");\n  Airtable.configure({\n    endpointUrl: \"https://api.airtable.com\",\n    apiKey: \"pattHY0czY5YOotHV.e0784aa4aa945b3303da15e14c71b08f80cdf91802cc481c260c880ec890af04\" // a read-only key\n  });\n  const base = Airtable.base(\"apptr77RaXLy74iuy\");\n  useEffect(() => {\n    // Get information from about table\n    base(\"About\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      let _siteTitle;\n      let _siteFavicon;\n      let _homeSplashImages;\n      records.forEach(function (record) {\n        _siteTitle = record.get(\"Site Title\");\n        _homeSplashImages = record.get(\"Splash Images\");\n        _siteFavicon = record.get(\"Emoji Favicon\");\n      });\n      setSiteTitle(_siteTitle);\n      setSiteFavicon(_siteFavicon);\n      setHomeSplashImages(_homeSplashImages);\n    });\n\n    // Get information from process table\n    base(\"Process\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      let _processPosts = [];\n      records.forEach(function (record) {\n        const postImages = record.get(\"Images\");\n        if (record.get(\"Show On Page\")) {\n          _processPosts.push({\n            title: record.get(\"Title\"),\n            date: record.get(\"Date\"),\n            imageLinks: postImages.map(workImage => {\n              return workImage.url;\n            }),\n            text: record.get(\"Text\")\n          });\n        }\n      });\n      setProcessPosts(_processPosts);\n    });\n\n    // Get all works from works table\n    // Put into object that can be referenced by ID\n    let _allWorksById = {};\n    let _dateCollections = {};\n    base(\"Works\").select({\n      view: \"Grid view\",\n      sort: [{\n        field: \"Date Collection\",\n        direction: \"asc\"\n      }]\n    }).eachPage(function page(records, fetchNextPage) {\n      records.forEach(function (record) {\n        // put work into dictionary indexed by ID\n        const workImages = record.get(\"Image\");\n        _allWorksById[record.id] = {\n          imageLink: workImages && workImages.length > 0 ? workImages[0].url : undefined,\n          videoLink: record.get(\"Video Link\"),\n          title: record.get(\"Title\"),\n          year: record.get(\"Year\"),\n          medium: record.get(\"Medium\"),\n          width: record.get(\"Width\"),\n          height: record.get(\"Height\"),\n          depth: record.get(\"Depth\"),\n          description: record.get(\"Description\")\n        };\n\n        // if work belongs to a year collection,\n        // put into year dictionary\n        // { 2024: [id, id, id], 2023: [id, id, id], 2016: [id, id, id]}}\n        let workDate = record.get(\"Date Collection\");\n        console.log(workDate);\n        if (workDate !== undefined && workDate !== \"\") {\n          if (_dateCollections[workDate]) {\n            _dateCollections[workDate].push(record.id);\n          } else {\n            _dateCollections[workDate] = [record.id];\n          }\n        }\n      });\n      fetchNextPage();\n    }, function done(err) {\n      console.log(_allWorksById);\n      setAllWorksById({\n        ..._allWorksById\n      });\n      setDateCollections({\n        ..._dateCollections\n      });\n      if (err) {\n        console.error(err);\n        return;\n      }\n    });\n  }, []);\n\n  // Once all works are retrieved,\n  // Get menu items from index tables,\n  // To build routes and pages\n  useEffect(() => {\n    base(\"Collections Index\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      const _collections = [];\n      records.forEach(record => {\n        _collections.push({\n          route: record.get(\"Route\"),\n          title: record.get(\"Title\"),\n          tableName: record.get(\"Title\"),\n          showInMenu: record.get(\"Show In Menu\"),\n          years: record.get(\"Years\"),\n          collectionStatement: record.get(\"Collection Statement\")\n        });\n      });\n      setCollections([..._collections]);\n      setIsLoading(false);\n    });\n    base(\"Installations Index\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      console.log(records);\n      if (err) {\n        console.error(err);\n        return;\n      }\n      const _installations = [];\n      records.forEach(record => {\n        const installationImage = record.get(\"Image\");\n        _installations.push({\n          route: record.get(\"Route\"),\n          title: record.get(\"Title\"),\n          tableName: record.get(\"Title\"),\n          showInMenu: record.get(\"Show In Menu\"),\n          link: record.get(\"Link\"),\n          dates: record.get(\"Dates\"),\n          location: record.get(\"Location\"),\n          imageLink: installationImage && installationImage.length > 0 ? installationImage[0].url : undefined\n        });\n      });\n      setInstallations(_installations);\n      setIsLoading(false);\n    });\n  }, [allWorksById]);\n\n  // MARKUP\n  if (isLoading) return null;\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    basename: \"/\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: siteTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: `data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${siteFavicon}</text></svg>`,\n        sizes: \"16x16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      showProcess: processPosts && processPosts.length > 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/CV\",\n        element: /*#__PURE__*/_jsxDEV(PageCV, {\n          base: base,\n          page: {\n            pageTitle: \"CV\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), Object.keys(dateCollections).map(dateCollectionID => {\n        let collection = dateCollections[dateCollectionID];\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: `${dateCollectionID}`,\n          element: /*#__PURE__*/_jsxDEV(PageDateCollections, {\n            base: base,\n            works: collection,\n            date: dateCollectionID,\n            allWorksById: allWorksById\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)\n        }, `${dateCollectionID}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this);\n      }), collections.map(collection => {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: `${collection.route}`,\n          element: /*#__PURE__*/_jsxDEV(PageCollections, {\n            base: base,\n            collection: collection,\n            allWorksById: allWorksById\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this)\n        }, `${collection.route}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this);\n      }), installations.map(installation => {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: `${installation.route}`,\n          element: /*#__PURE__*/_jsxDEV(PageInstallation, {\n            base: base,\n            page: installation,\n            allWorksById: allWorksById\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)\n        }, `${installation.route}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"process\",\n        element: /*#__PURE__*/_jsxDEV(PageProcess, {\n          posts: processPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 20\n        }, this)\n      }, \"process\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"about\",\n        element: /*#__PURE__*/_jsxDEV(PageAbout, {\n          base: base\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 20\n        }, this)\n      }, \"about\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"contact\",\n        element: /*#__PURE__*/_jsxDEV(PageContact, {\n          base: base\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 20\n        }, this)\n      }, \"contact\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          splashImages: homeSplashImages,\n          collections: collections,\n          dateCollections: dateCollections,\n          installations: installations,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, window.location.pathname, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5tL2+3jatTzYkvSa3r3iefHQsGw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","HashRouter","Route","Helmet","Home","Navbar","PageInstallation","PageProcess","PageCollections","PageDateCollections","PageAbout","PageContact","PageCV","jsxDEV","_jsxDEV","App","_s","siteTitle","setSiteTitle","siteFavicon","setSiteFavicon","homeSplashImages","setHomeSplashImages","collections","setCollections","dateCollections","setDateCollections","processPosts","setProcessPosts","allWorksById","setAllWorksById","installations","setInstallations","isLoading","setIsLoading","Airtable","require","configure","endpointUrl","apiKey","base","select","view","firstPage","err","records","console","error","_siteTitle","_siteFavicon","_homeSplashImages","forEach","record","get","_processPosts","postImages","push","title","date","imageLinks","map","workImage","url","text","_allWorksById","_dateCollections","sort","field","direction","eachPage","page","fetchNextPage","workImages","id","imageLink","length","undefined","videoLink","year","medium","width","height","depth","description","workDate","log","done","_collections","route","tableName","showInMenu","years","collectionStatement","_installations","installationImage","link","dates","location","basename","children","fileName","_jsxFileName","lineNumber","columnNumber","rel","href","sizes","showProcess","path","element","pageTitle","Object","keys","dateCollectionID","collection","works","installation","posts","splashImages","window","pathname","_c","$RefreshReg$"],"sources":["/Users/samticknor/Portfolio-Site/src/App.js"],"sourcesContent":["// React\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, HashRouter, Route } from \"react-router-dom\";\n\n// Helmet\nimport Helmet from \"react-helmet\";\n\n// Screens\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport PageInstallation from \"./components/PageInstallation\";\nimport PageProcess from \"./components/PageProcess\";\nimport PageCollections from \"./components/PageCollections\";\nimport PageDateCollections from \"./components/PageDateCollections\";\nimport PageAbout from \"./components/PageAbout\";\nimport PageContact from \"./components/PageContact\";\nimport PageCV from \"./components/PageCV\";\n\n// Style\nimport \"./App.css\";\n\nexport default function App() {\n  // Site-Wide State\n  const [siteTitle, setSiteTitle] = useState(\"Sam Ticknor\");\n  const [siteFavicon, setSiteFavicon] = useState(\"ðŸ”…\");\n  const [homeSplashImages, setHomeSplashImages] = useState([]);\n  const [collections, setCollections] = useState([]);\n  const [dateCollections, setDateCollections] = useState({});\n  const [processPosts, setProcessPosts] = useState([]);\n  const [allWorksById, setAllWorksById] = useState({});\n  const [installations, setInstallations] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // AIRTABLE CONTENT\n  var Airtable = require(\"airtable\");\n  Airtable.configure({\n    endpointUrl: \"https://api.airtable.com\",\n    apiKey:\n      \"pattHY0czY5YOotHV.e0784aa4aa945b3303da15e14c71b08f80cdf91802cc481c260c880ec890af04\", // a read-only key\n  });\n  const base = Airtable.base(\"apptr77RaXLy74iuy\");\n\n  useEffect(() => {\n    // Get information from about table\n    base(\"About\")\n      .select({\n        view: \"Grid view\",\n      })\n      .firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        let _siteTitle;\n        let _siteFavicon;\n        let _homeSplashImages;\n        records.forEach(function (record) {\n          _siteTitle = record.get(\"Site Title\");\n          _homeSplashImages = record.get(\"Splash Images\");\n          _siteFavicon = record.get(\"Emoji Favicon\");\n        });\n        setSiteTitle(_siteTitle);\n        setSiteFavicon(_siteFavicon);\n        setHomeSplashImages(_homeSplashImages);\n      });\n\n    // Get information from process table\n    base(\"Process\")\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        let _processPosts = [];\n        records.forEach(function (record) {\n          const postImages = record.get(\"Images\");\n          if (record.get(\"Show On Page\")) {\n            _processPosts.push({\n              title: record.get(\"Title\"),\n              date: record.get(\"Date\"),\n              imageLinks: postImages.map((workImage) => {\n                return workImage.url;\n              }),\n              text: record.get(\"Text\"),\n            });\n          }\n        });\n        setProcessPosts(_processPosts);\n      });\n\n    // Get all works from works table\n    // Put into object that can be referenced by ID\n    let _allWorksById = {};\n    let _dateCollections = {};\n    base(\"Works\")\n      .select({\n        view: \"Grid view\",\n        sort: [{ field: \"Date Collection\", direction: \"asc\" }],\n      })\n      .eachPage(\n        function page(records, fetchNextPage) {\n          records.forEach(function (record) {\n            // put work into dictionary indexed by ID\n            const workImages = record.get(\"Image\");\n            _allWorksById[record.id] = {\n              imageLink:\n                workImages && workImages.length > 0\n                  ? workImages[0].url\n                  : undefined,\n              videoLink: record.get(\"Video Link\"),\n              title: record.get(\"Title\"),\n              year: record.get(\"Year\"),\n              medium: record.get(\"Medium\"),\n              width: record.get(\"Width\"),\n              height: record.get(\"Height\"),\n              depth: record.get(\"Depth\"),\n              description: record.get(\"Description\"),\n            };\n\n            // if work belongs to a year collection,\n            // put into year dictionary\n            // { 2024: [id, id, id], 2023: [id, id, id], 2016: [id, id, id]}}\n            let workDate = record.get(\"Date Collection\");\n            console.log(workDate);\n            if (workDate !== undefined && workDate !== \"\") {\n              if (_dateCollections[workDate]) {\n                _dateCollections[workDate].push(record.id);\n              } else {\n                _dateCollections[workDate] = [record.id];\n              }\n            }\n          });\n          fetchNextPage();\n        },\n        function done(err) {\n          console.log(_allWorksById);\n          setAllWorksById({ ..._allWorksById });\n          setDateCollections({ ..._dateCollections });\n\n          if (err) {\n            console.error(err);\n            return;\n          }\n        }\n      );\n  }, []);\n\n  // Once all works are retrieved,\n  // Get menu items from index tables,\n  // To build routes and pages\n  useEffect(() => {\n    base(\"Collections Index\")\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        const _collections = [];\n        records.forEach((record) => {\n          _collections.push({\n            route: record.get(\"Route\"),\n            title: record.get(\"Title\"),\n            tableName: record.get(\"Title\"),\n            showInMenu: record.get(\"Show In Menu\"),\n            years: record.get(\"Years\"),\n            collectionStatement: record.get(\"Collection Statement\"),\n          });\n        });\n        setCollections([..._collections]);\n        setIsLoading(false);\n      });\n\n    base(\"Installations Index\")\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        console.log(records);\n        if (err) {\n          console.error(err);\n          return;\n        }\n        const _installations = [];\n        records.forEach((record) => {\n          const installationImage = record.get(\"Image\");\n          _installations.push({\n            route: record.get(\"Route\"),\n            title: record.get(\"Title\"),\n            tableName: record.get(\"Title\"),\n            showInMenu: record.get(\"Show In Menu\"),\n            link: record.get(\"Link\"),\n            dates: record.get(\"Dates\"),\n            location: record.get(\"Location\"),\n            imageLink:\n              installationImage && installationImage.length > 0\n                ? installationImage[0].url\n                : undefined,\n          });\n        });\n        setInstallations(_installations);\n        setIsLoading(false);\n      });\n  }, [allWorksById]);\n\n  // MARKUP\n  if (isLoading) return null;\n  return (\n    <HashRouter basename=\"/\" key={window.location.pathname}>\n      <Helmet>\n        <title>{siteTitle}</title>\n        <link\n          rel=\"icon\"\n          href={`data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${siteFavicon}</text></svg>`}\n          sizes=\"16x16\"\n        />\n      </Helmet>\n\n      <Navbar showProcess={processPosts && processPosts.length > 0} />\n\n      <Routes>\n        <Route\n          path=\"/CV\"\n          element={<PageCV base={base} page={{ pageTitle: \"CV\" }} />}\n        />\n\n        {Object.keys(dateCollections).map((dateCollectionID) => {\n          let collection = dateCollections[dateCollectionID];\n          return (\n            <Route\n              key={`${dateCollectionID}`}\n              path={`${dateCollectionID}`}\n              element={\n                <PageDateCollections\n                  base={base}\n                  works={collection}\n                  date={dateCollectionID}\n                  allWorksById={allWorksById}\n                />\n              }\n            />\n          );\n        })}\n\n        {collections.map((collection) => {\n          return (\n            <Route\n              key={`${collection.route}`}\n              path={`${collection.route}`}\n              element={\n                <PageCollections\n                  base={base}\n                  collection={collection}\n                  allWorksById={allWorksById}\n                />\n              }\n            />\n          );\n        })}\n\n        {installations.map((installation) => {\n          return (\n            <Route\n              key={`${installation.route}`}\n              path={`${installation.route}`}\n              element={\n                <PageInstallation\n                  base={base}\n                  page={installation}\n                  allWorksById={allWorksById}\n                />\n              }\n            />\n          );\n        })}\n\n        <Route\n          key={\"process\"}\n          path={\"process\"}\n          element={<PageProcess posts={processPosts} />}\n        />\n\n        <Route\n          key={\"about\"}\n          path={\"about\"}\n          element={<PageAbout base={base} />}\n        />\n\n        <Route\n          key={\"contact\"}\n          path={\"contact\"}\n          element={<PageContact base={base} />}\n        />\n\n        <Route\n          path=\"/\"\n          element={\n            <Home\n              splashImages={homeSplashImages}\n              collections={collections}\n              dateCollections={dateCollections}\n              installations={installations}\n              isLoading={isLoading}\n            />\n          }\n        />\n      </Routes>\n    </HashRouter>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}