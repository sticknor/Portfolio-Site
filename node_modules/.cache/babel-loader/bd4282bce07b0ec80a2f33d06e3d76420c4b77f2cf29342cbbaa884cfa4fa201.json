{"ast":null,"code":"var _jsxFileName = \"/Users/samticknor/Portfolio-Site/src/components/PageCollections.js\",\n  _s = $RefreshSig$();\n// React\nimport React, { useState, useEffect } from \"react\";\nimport { ImageFullWork } from \"./modules/ImageOnlyModules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PageCollections({\n  page,\n  base,\n  allworks\n}) {\n  _s();\n  const [collectionWorks, setCollectionWorks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    if (Object.keys(allworks).length === 0) setIsLoading(true);else {\n      const title = page[\"Title\"];\n      base(title).select({\n        view: \"Grid view\"\n      }).firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        let _works = [];\n        records.forEach(function (record) {\n          let workId = record.get(\"Work\")[0];\n          let work = allworks[workId];\n          _works.push(work);\n        });\n        setCollectionWorks([..._works]);\n        setIsLoading(false);\n      });\n    }\n  }, [allworks]);\n  if (isLoading) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scrollContent\",\n      children: works.map((work, index) => {\n        console.log(\"MAPPED WORK\");\n        console.log(index);\n        console.log(work);\n        return /*#__PURE__*/_jsxDEV(ImageFullWork, {\n          work: work\n        }, work.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n        // <div>{work.get(\"Title\")}</div>\n        ;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(PageCollections, \"gl7K0ZafbdjDSIO0xsjoQb8xRlM=\");\n_c = PageCollections;\nexport default PageCollections;\nvar _c;\n$RefreshReg$(_c, \"PageCollections\");","map":{"version":3,"names":["React","useState","useEffect","ImageFullWork","jsxDEV","_jsxDEV","PageCollections","page","base","allworks","_s","collectionWorks","setCollectionWorks","isLoading","setIsLoading","Object","keys","length","title","select","view","firstPage","err","records","console","error","_works","forEach","record","workId","get","work","push","id","children","works","map","index","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samticknor/Portfolio-Site/src/components/PageCollections.js"],"sourcesContent":["// React\nimport React, { useState, useEffect } from \"react\";\nimport { ImageFullWork } from \"./modules/ImageOnlyModules\";\n\nfunction PageCollections({ page, base, allworks }) {\n  const [collectionWorks, setCollectionWorks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (Object.keys(allworks).length === 0) setIsLoading(true);\n    else {\n      const title = page[\"Title\"];\n      base(title)\n        .select({ view: \"Grid view\" })\n        .firstPage(function (err, records) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n          let _works = [];\n          records.forEach(function (record) {\n            let workId = record.get(\"Work\")[0];\n            let work = allworks[workId];\n            _works.push(work);\n          });\n          setCollectionWorks([..._works]);\n          setIsLoading(false);\n        });\n    }\n  }, [allworks]);\n\n  if (isLoading) return null;\n\n  return (\n    <div id={\"page\"}>\n      <div id=\"scrollContent\">\n        {works.map((work, index) => {\n          console.log(\"MAPPED WORK\");\n          console.log(index);\n          console.log(work);\n          return (\n            <ImageFullWork key={work.id} work={work} />\n            // <div>{work.get(\"Title\")}</div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default PageCollections;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,eAAeA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,IAAIa,MAAM,CAACC,IAAI,CAACP,QAAQ,CAAC,CAACQ,MAAM,KAAK,CAAC,EAAEH,YAAY,CAAC,IAAI,CAAC,CAAC,KACtD;MACH,MAAMI,KAAK,GAAGX,IAAI,CAAC,OAAO,CAAC;MAC3BC,IAAI,CAACU,KAAK,CAAC,CACRC,MAAM,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,CAAC,CAC7BC,SAAS,CAAC,UAAUC,GAAG,EAAEC,OAAO,EAAE;QACjC,IAAID,GAAG,EAAE;UACPE,OAAO,CAACC,KAAK,CAACH,GAAG,CAAC;UAClB;QACF;QACA,IAAII,MAAM,GAAG,EAAE;QACfH,OAAO,CAACI,OAAO,CAAC,UAAUC,MAAM,EAAE;UAChC,IAAIC,MAAM,GAAGD,MAAM,CAACE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAClC,IAAIC,IAAI,GAAGtB,QAAQ,CAACoB,MAAM,CAAC;UAC3BH,MAAM,CAACM,IAAI,CAACD,IAAI,CAAC;QACnB,CAAC,CAAC;QACFnB,kBAAkB,CAAC,CAAC,GAAGc,MAAM,CAAC,CAAC;QAC/BZ,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,IAAII,SAAS,EAAE,OAAO,IAAI;EAE1B,oBACER,OAAA;IAAK4B,EAAE,EAAE,MAAO;IAAAC,QAAA,eACd7B,OAAA;MAAK4B,EAAE,EAAC,eAAe;MAAAC,QAAA,EACpBC,KAAK,CAACC,GAAG,CAAC,CAACL,IAAI,EAAEM,KAAK,KAAK;QAC1Bb,OAAO,CAACc,GAAG,CAAC,aAAa,CAAC;QAC1Bd,OAAO,CAACc,GAAG,CAACD,KAAK,CAAC;QAClBb,OAAO,CAACc,GAAG,CAACP,IAAI,CAAC;QACjB,oBACE1B,OAAA,CAACF,aAAa;UAAe4B,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACE,EAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe;QAC1C;QAAA;MAEJ,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChC,EAAA,CA5CQJ,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AA8CxB,eAAeA,eAAe;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}