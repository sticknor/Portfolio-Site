{"ast":null,"code":"// React\nimport React,{useState,useEffect}from\"react\";import{Routes,HashRouter,Route}from\"react-router-dom\";// Helmet\nimport Helmet from\"react-helmet\";// Screens\nimport Home from\"./components/Home\";import Navbar from\"./components/Navbar\";import PageInstallation from\"./components/PageInstallation\";import PageProcess from\"./components/PageProcess\";import PageCollections from\"./components/PageCollections\";import PageDateCollections from\"./components/PageDateCollections\";import PageAbout from\"./components/PageAbout\";import PageContact from\"./components/PageContact\";import PageCV from\"./components/PageCV\";import AnalyticsPageView from\"./components/Analytics\";// Style\nimport\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){// Site-Wide State\nconst[siteTitle,setSiteTitle]=useState(\"Sam Ticknor\");// const [siteFavicon, setSiteFavicon] = useState(\"ðŸ”…\");\nconst[homeSplashImages,setHomeSplashImages]=useState([]);const[collections,setCollections]=useState([]);const[dateCollections,setDateCollections]=useState({});const[processPosts,setProcessPosts]=useState([]);const[allWorksById,setAllWorksById]=useState({});const[installations,setInstallations]=useState([]);const[isLoading,setIsLoading]=useState(true);// AIRTABLE CONTENT\nvar Airtable=require(\"airtable\");Airtable.configure({endpointUrl:\"https://api.airtable.com\",apiKey:\"pattHY0czY5YOotHV.e0784aa4aa945b3303da15e14c71b08f80cdf91802cc481c260c880ec890af04\"// a read-only key\n});const base=Airtable.base(\"apptr77RaXLy74iuy\");useEffect(()=>{// Get information from about table\nbase(\"About\").select({view:\"Grid view\"}).firstPage(function(err,records){if(err){console.error(err);return;}let _siteTitle;// let _siteFavicon;\nlet _homeSplashImages;records.forEach(function(record){_siteTitle=record.get(\"Site Title\");_homeSplashImages=record.get(\"Splash Images\");// _siteFavicon = record.get(\"Emoji Favicon\");\n});setSiteTitle(_siteTitle);// setSiteFavicon(_siteFavicon);\nsetHomeSplashImages(_homeSplashImages);});// Get information from process table\nbase(\"Process\").select({view:\"Grid view\"}).firstPage(function(err,records){if(err){console.error(err);return;}let _processPosts=[];records.forEach(function(record){const postImages=record.get(\"Images\");if(record.get(\"Show On Page\")){_processPosts.push({title:record.get(\"Title\"),date:record.get(\"Date\"),imageLinks:postImages.map(workImage=>{return workImage.url;}),text:record.get(\"Text\")});}});setProcessPosts(_processPosts);});// Get all works from works table\n// Put into object that can be referenced by ID\nlet _allWorksById={};let _dateCollections={};base(\"Works\").select({view:\"Grid view\"}).eachPage(function page(records,fetchNextPage){records.forEach(function(record){// put work into dictionary indexed by ID\nconst workImages=record.get(\"Image\");_allWorksById[record.id]={imageLink:workImages&&workImages.length>0?workImages[0].url:undefined,videoLink:record.get(\"Video Link\"),title:record.get(\"Title\"),year:record.get(\"Year\"),medium:record.get(\"Medium\"),width:record.get(\"Width\"),height:record.get(\"Height\"),depth:record.get(\"Depth\"),description:record.get(\"Description\")};// if work belongs to a year collection,\n// put into year dictionary\n// { 2024: [id, id, id], 2023: [id, id, id], 2016: [id, id, id]}}\nlet workDate=record.get(\"Date Collection\");if(workDate!==undefined&&workDate!==\"\"){if(_dateCollections[workDate]){_dateCollections[workDate].push(record.id);}else{_dateCollections[workDate]=[record.id];}}});fetchNextPage();},function done(err){setAllWorksById({..._allWorksById});setDateCollections({..._dateCollections});if(err){console.error(err);return;}});},[]);// Once all works are retrieved,\n// Get menu items from index tables,\n// To build routes and pages\nuseEffect(()=>{base(\"Collections Index\").select({view:\"Grid view\"}).firstPage(function(err,records){if(err){console.error(err);return;}const _collections=[];records.forEach(record=>{_collections.push({route:record.get(\"Route\"),title:record.get(\"Title\"),tableName:record.get(\"Title\"),showInMenu:record.get(\"Show In Menu\"),years:record.get(\"Years\"),collectionStatement:record.get(\"Collection Statement\")});});setCollections([..._collections]);setIsLoading(false);});base(\"Installations Index\").select({view:\"Grid view\"}).firstPage(function(err,records){if(err){console.error(err);return;}const _installations=[];records.forEach(record=>{const installationImage=record.get(\"Image\");_installations.push({route:record.get(\"Route\"),title:record.get(\"Title\"),tableName:record.get(\"Title\"),showInMenu:record.get(\"Show In Menu\"),link:record.get(\"Link\"),dates:record.get(\"Dates\"),location:record.get(\"Location\"),imageLink:installationImage&&installationImage.length>0?installationImage[0].url:undefined});});setInstallations(_installations);setIsLoading(false);});},[allWorksById]);// MARKUP\nif(isLoading)return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flex:1,alignItems:\"center\",justifyContent:\"center\",textDecoration:\"none\",fontWeight:600,fontSize:\"16px\",whiteSpace:\"nowrap\",lineHeight:\"100%\",color:\"#999\"},children:\"Loading...\"});return/*#__PURE__*/_jsxs(HashRouter,{basename:\"/\",children:[/*#__PURE__*/_jsx(AnalyticsPageView,{}),/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:siteTitle})}),/*#__PURE__*/_jsx(Navbar,{showProcess:processPosts&&processPosts.length>0}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/CV\",element:/*#__PURE__*/_jsx(PageCV,{base:base,page:{pageTitle:\"CV\"}})}),Object.keys(dateCollections).map(dateCollectionID=>{let collection=dateCollections[dateCollectionID];return/*#__PURE__*/_jsx(Route,{path:`${dateCollectionID}`,element:/*#__PURE__*/_jsx(PageDateCollections,{base:base,works:collection,date:dateCollectionID,dateCollections:dateCollections,allWorksById:allWorksById})},`${dateCollectionID}`);}),collections.map(collection=>{return/*#__PURE__*/_jsx(Route,{path:`${collection.route}`,element:/*#__PURE__*/_jsx(PageCollections,{base:base,collection:collection,allWorksById:allWorksById})},`${collection.route}`);}),installations.map(installation=>{return/*#__PURE__*/_jsx(Route,{path:`${installation.route}`,element:/*#__PURE__*/_jsx(PageInstallation,{base:base,page:installation,allWorksById:allWorksById})},`${installation.route}`);}),/*#__PURE__*/_jsx(Route,{path:\"process\",element:/*#__PURE__*/_jsx(PageProcess,{posts:processPosts})},\"process\"),/*#__PURE__*/_jsx(Route,{path:\"about\",element:/*#__PURE__*/_jsx(PageAbout,{base:base})},\"about\"),/*#__PURE__*/_jsx(Route,{path:\"contact\",element:/*#__PURE__*/_jsx(PageContact,{base:base})},\"contact\"),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{splashImages:homeSplashImages,collections:collections,dateCollections:dateCollections,installations:installations,isLoading:isLoading})})]})]},window.location.pathname);}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}