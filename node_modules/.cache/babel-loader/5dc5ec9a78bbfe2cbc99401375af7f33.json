{"ast":null,"code":"import _slicedToArray from \"/Users/samticknor/Portfolio-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/samticknor/Portfolio-Site/src/components/CVPage.js\";\n// React\nimport React, { useState, useEffect } from \"react\";\nfunction CVPage(_ref) {\n  var _this = this;\n  var page = _ref.page,\n    base = _ref.base;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    recordsByCategory = _useState2[0],\n    setRecordsByCategory = _useState2[1];\n  useEffect(function () {\n    base(\"CV\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      var _recordsByCategory = {};\n      records.forEach(function (record) {\n        var category = record.get(\"Category\")[0];\n\n        // format record\n        var show = record.get(\"Show on CV\");\n        var title = record.get(\"Title\");\n        var place = record.get(\"Place\");\n        var city = record.get(\"City, State\");\n        var dates = record.get(\"Date(s)\");\n        var recordLine1 = title;\n        var recordLine2 = [];\n        if (place) recordLine2.push(place);\n        if (city) recordLine2.push(city);\n        if (dates) recordLine2.push(dates);\n        recordLine2 = recordLine2.join(\" --- \");\n        var formattedRecord = {\n          show: show,\n          line1: recordLine1,\n          line2: recordLine2\n        };\n        if (_recordsByCategory[category] === undefined) {\n          _recordsByCategory[category] = [formattedRecord];\n        } else {\n          _recordsByCategory[category] = _recordsByCategory[category].concat([[formattedRecord]]);\n        }\n      });\n      setRecordsByCategory(_recordsByCategory);\n    });\n  }, [page.pageTitle]);\n  console.log(recordsByCategory);\n  if (recordsByCategory === undefined) return null;\n  console.log(\"ELSE\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page\",\n    className: \"cvpage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"scrollContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, Object.keys(recordsByCategory).map(function (category, index) {\n    console.log(category);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"aboutContainer\",\n      key: \"\".concat(category, \"_\").concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"aboutContainerHeading\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, category), recordsByCategory[category].map(function (record, index) {\n      if (record.show) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 23\n          }\n        }, record.line1), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }\n        }, record.line2));\n      }\n    }));\n  })));\n}\nexport default CVPage;","map":{"version":3,"names":["React","useState","useEffect","CVPage","_ref","_this","page","base","_useState","_useState2","_slicedToArray","recordsByCategory","setRecordsByCategory","select","view","firstPage","err","records","console","error","_recordsByCategory","forEach","record","category","get","show","title","place","city","dates","recordLine1","recordLine2","push","join","formattedRecord","line1","line2","undefined","concat","pageTitle","log","createElement","id","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","key","Fragment"],"sources":["/Users/samticknor/Portfolio-Site/src/components/CVPage.js"],"sourcesContent":["// React\nimport React, { useState, useEffect } from \"react\";\n\nfunction CVPage({ page, base }) {\n  const [recordsByCategory, setRecordsByCategory] = useState({});\n\n  useEffect(() => {\n    base(\"CV\")\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        const _recordsByCategory = {};\n        records.forEach(function (record) {\n          const category = record.get(\"Category\")[0];\n\n          // format record\n          let show = record.get(\"Show on CV\");\n          let title = record.get(\"Title\");\n          let place = record.get(\"Place\");\n          let city = record.get(\"City, State\");\n          let dates = record.get(\"Date(s)\");\n          let recordLine1 = title;\n          let recordLine2 = [];\n          if (place) recordLine2.push(place);\n          if (city) recordLine2.push(city);\n          if (dates) recordLine2.push(dates);\n          recordLine2 = recordLine2.join(\" --- \");\n\n          let formattedRecord = {\n            show: show,\n            line1: recordLine1,\n            line2: recordLine2,\n          };\n\n          if (_recordsByCategory[category] === undefined) {\n            _recordsByCategory[category] = [formattedRecord];\n          } else {\n            _recordsByCategory[category] = _recordsByCategory[category].concat([\n              [formattedRecord],\n            ]);\n          }\n        });\n        setRecordsByCategory(_recordsByCategory);\n      });\n  }, [page.pageTitle]);\n\n  console.log(recordsByCategory);\n  if (recordsByCategory === undefined) return null;\n  console.log(\"ELSE\");\n  return (\n    <div id={\"page\"} className=\"cvpage\">\n      <div id=\"scrollContent\">\n        {Object.keys(recordsByCategory).map((category, index) => {\n          console.log(category);\n          return (\n            <div className=\"aboutContainer\" key={`${category}_${index}`}>\n              <div className=\"aboutContainerHeading\">{category}</div>\n              {recordsByCategory[category].map((record, index) => {\n                if (record.show) {\n                  return (\n                    <>\n                      <div>{record.line1}</div>\n                      <div>{record.line2}</div>\n                    </>\n                  );\n                }\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default CVPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}