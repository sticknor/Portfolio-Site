{"ast":null,"code":"var _jsxFileName = \"/Users/samticknor/Portfolio-Site/src/components/ProcessPage.js\";\n// React\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProcessPage({\n  posts\n}) {\n  console.log(posts);\n  if (!posts) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scrollContent\",\n      children: posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.imageLinks.map(link => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                width: \"100px\",\n                height: \"100px\",\n                src: link\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = ProcessPage;\nexport default ProcessPage;\nvar _c;\n$RefreshReg$(_c, \"ProcessPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ProcessPage","posts","console","log","id","children","map","post","index","date","fileName","_jsxFileName","lineNumber","columnNumber","text","imageLinks","link","width","height","src","_c","$RefreshReg$"],"sources":["/Users/samticknor/Portfolio-Site/src/components/ProcessPage.js"],"sourcesContent":["// React\nimport React from \"react\";\n\nfunction ProcessPage({ posts }) {\n  console.log(posts);\n  if (!posts) return null;\n  return (\n    <div id={\"page\"}>\n      <div id=\"scrollContent\">\n        {posts.map((post, index) => {\n          return (\n            <>\n              <div>{post.date}</div>\n              <div>{post.text}</div>\n              <div>\n                {post.imageLinks.map((link) => {\n                  return <img width=\"100px\" height=\"100px\" src={link} />;\n                })}\n              </div>\n            </>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default ProcessPage;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,WAAWA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAC9BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;EACvB,oBACEJ,OAAA;IAAKO,EAAE,EAAE,MAAO;IAAAC,QAAA,eACdR,OAAA;MAAKO,EAAE,EAAC,eAAe;MAAAC,QAAA,EACpBJ,KAAK,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC1B,oBACEX,OAAA,CAAAE,SAAA;UAAAM,QAAA,gBACER,OAAA;YAAAQ,QAAA,EAAME,IAAI,CAACE;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtBhB,OAAA;YAAAQ,QAAA,EAAME,IAAI,CAACO;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtBhB,OAAA;YAAAQ,QAAA,EACGE,IAAI,CAACQ,UAAU,CAACT,GAAG,CAAEU,IAAI,IAAK;cAC7B,oBAAOnB,OAAA;gBAAKoB,KAAK,EAAC,OAAO;gBAACC,MAAM,EAAC,OAAO;gBAACC,GAAG,EAAEH;cAAK;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YACxD,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,eACN,CAAC;MAEP,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACO,EAAA,GAtBQpB,WAAW;AAwBpB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}