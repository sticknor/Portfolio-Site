{"ast":null,"code":"var _jsxFileName = \"/Users/samticknor/Portfolio-Site/src/components/PageCollections.js\",\n  _s = $RefreshSig$();\n// React\nimport React, { useState, useEffect } from \"react\";\nimport { ImageFullWork } from \"./modules/ImageOnlyModules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PageCollections({\n  page,\n  base,\n  allworks\n}) {\n  _s();\n  const [works, setWorks] = useState(undefined);\n  useEffect(() => {\n    if (document.querySelector(\"#scrollContent\")) {\n      document.querySelector(\"#page\").scrollTop = 0;\n    }\n    const title = page[\"Title\"];\n    console.log(\"TITLE\");\n    console.log(title);\n    base(title).select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      let _works = [];\n      records.forEach(function (record) {\n        let workId = record.get(\"Work\")[0];\n        let work = allworks[workId];\n        console.log(allworks);\n        _works.push(work);\n      });\n      console.log(_works);\n      setWorks(_works);\n    });\n  }, [page.pageTitle]);\n  if (works === undefined) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scrollContent\",\n      children: works.map((work, index) => {\n        return /*#__PURE__*/_jsxDEV(ImageFullWork, {\n          module: work,\n          base: base\n        }, work.get(\"Title\"), false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(PageCollections, \"iY7ErgLgZ3x0z+18g+Ifo7Xp4oQ=\");\n_c = PageCollections;\nexport default PageCollections;\nvar _c;\n$RefreshReg$(_c, \"PageCollections\");","map":{"version":3,"names":["React","useState","useEffect","ImageFullWork","jsxDEV","_jsxDEV","PageCollections","page","base","allworks","_s","works","setWorks","undefined","document","querySelector","scrollTop","title","console","log","select","view","firstPage","err","records","error","_works","forEach","record","workId","get","work","push","pageTitle","id","children","map","index","module","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samticknor/Portfolio-Site/src/components/PageCollections.js"],"sourcesContent":["// React\nimport React, { useState, useEffect } from \"react\";\nimport { ImageFullWork } from \"./modules/ImageOnlyModules\";\n\nfunction PageCollections({ page, base, allworks }) {\n  const [works, setWorks] = useState(undefined);\n\n  useEffect(() => {\n    if (document.querySelector(\"#scrollContent\")) {\n      document.querySelector(\"#page\").scrollTop = 0;\n    }\n\n    const title = page[\"Title\"];\n    console.log(\"TITLE\");\n    console.log(title);\n\n    base(title)\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        let _works = [];\n        records.forEach(function (record) {\n          let workId = record.get(\"Work\")[0];\n          let work = allworks[workId];\n          console.log(allworks);\n          _works.push(work);\n        });\n        console.log(_works);\n        setWorks(_works);\n      });\n  }, [page.pageTitle]);\n\n  if (works === undefined) return null;\n\n  return (\n    <div id={\"page\"}>\n      <div id=\"scrollContent\">\n        {works.map((work, index) => {\n          return (\n            <ImageFullWork key={work.get(\"Title\")} module={work} base={base} />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default PageCollections;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,eAAeA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,SAAS,CAAC;EAE7CX,SAAS,CAAC,MAAM;IACd,IAAIY,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,EAAE;MAC5CD,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAACC,SAAS,GAAG,CAAC;IAC/C;IAEA,MAAMC,KAAK,GAAGV,IAAI,CAAC,OAAO,CAAC;IAC3BW,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAElBT,IAAI,CAACS,KAAK,CAAC,CACRG,MAAM,CAAC;MAAEC,IAAI,EAAE;IAAY,CAAC,CAAC,CAC7BC,SAAS,CAAC,UAAUC,GAAG,EAAEC,OAAO,EAAE;MACjC,IAAID,GAAG,EAAE;QACPL,OAAO,CAACO,KAAK,CAACF,GAAG,CAAC;QAClB;MACF;MACA,IAAIG,MAAM,GAAG,EAAE;MACfF,OAAO,CAACG,OAAO,CAAC,UAAUC,MAAM,EAAE;QAChC,IAAIC,MAAM,GAAGD,MAAM,CAACE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAClC,IAAIC,IAAI,GAAGtB,QAAQ,CAACoB,MAAM,CAAC;QAC3BX,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;QACrBiB,MAAM,CAACM,IAAI,CAACD,IAAI,CAAC;MACnB,CAAC,CAAC;MACFb,OAAO,CAACC,GAAG,CAACO,MAAM,CAAC;MACnBd,QAAQ,CAACc,MAAM,CAAC;IAClB,CAAC,CAAC;EACN,CAAC,EAAE,CAACnB,IAAI,CAAC0B,SAAS,CAAC,CAAC;EAEpB,IAAItB,KAAK,KAAKE,SAAS,EAAE,OAAO,IAAI;EAEpC,oBACER,OAAA;IAAK6B,EAAE,EAAE,MAAO;IAAAC,QAAA,eACd9B,OAAA;MAAK6B,EAAE,EAAC,eAAe;MAAAC,QAAA,EACpBxB,KAAK,CAACyB,GAAG,CAAC,CAACL,IAAI,EAAEM,KAAK,KAAK;QAC1B,oBACEhC,OAAA,CAACF,aAAa;UAAyBmC,MAAM,EAAEP,IAAK;UAACvB,IAAI,EAAEA;QAAK,GAA5CuB,IAAI,CAACD,GAAG,CAAC,OAAO,CAAC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAAC;MAEvE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChC,EAAA,CA5CQJ,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AA8CxB,eAAeA,eAAe;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}