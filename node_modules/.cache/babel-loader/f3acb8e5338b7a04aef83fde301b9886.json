{"ast":null,"code":"var _jsxFileName = \"/Users/samticknor/Portfolio-Site/src/components/CVPage.js\";\n// React\nimport React, { useState, useEffect } from \"react\";\nfunction CVPage(_ref) {\n  var page = _ref.page,\n    base = _ref.base;\n  console.log(\"re\");\n  useEffect(function () {\n    base(\"CV\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      var recordsByCategory = {};\n      records.forEach(function (record) {\n        var category = record.get(\"Category\")[0];\n        if (recordsByCategory[category] === undefined) {\n          recordsByCategory[category] = [record];\n        } else {\n          recordsByCategory[category] = recordsByCategory[category].append(record);\n        }\n      });\n      console.log(recordsByCategory);\n    });\n  }, [page.pageTitle]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"scrollContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pageContainer\",\n    style: {\n      flexDirection: \"row\",\n      gap: 50,\n      alignItems: \"flex-start\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n}\nexport default CVPage;\n\n// class CV extends Page {\n\n//     constructor(data) {\n//       super(data);\n//     }\n\n//     renderRow(rowData) {\n\n//       var entry = $(\"<div class='entryCV'>\");\n\n//       if (rowData.get(\"Title\")) {\n//         var title = $(\"<span class='titleCV'>\");\n//         title.html(rowData.get(\"Title\"));\n//       }\n\n//       if (rowData.get(\"Place\")) {\n//         var place = $(\"<span class='preDot placeCV'>\");\n//         place.html(rowData.get(\"Place\"));\n//       }\n\n//       if (rowData.get(\"City, State\")) {\n//         var location = $(\"<span class='preDot locationCV'>\");\n//         location.html(rowData.get(\"City, State\"));\n//       }\n\n//       if (rowData.get(\"Date(s)\")) {\n//         var date = $(\"<span class='preDot dateCV'>\");\n//         date.html(rowData.get(\"Date(s)\"));\n//       }\n\n//       if (rowData.get(\"Subtitle\")) {\n//         var subtitle = $(\"<div class='subtitleCV'>\");\n//         subtitle.html(rowData.get(\"Subtitle\"));\n//       }\n\n//       if (rowData.get(\"Description\")) {\n//         var description = $(\"<div class='descriptionCV'>\");\n//         description.html(rowData.get(\"Description\").replace(/\\n/g, \"<br/>\"));\n//       }\n\n//       if (rowData.get(\"Link\")) {\n//         var link = $(\"<a class='linkCV'>\");\n//         link.attr(\"href\", rowData.get(\"Link\"));\n//         link.attr(\"target\", \"_blank\");\n//         if (rowData.get(\"Link Title\")) {\n//           link.html(rowData.get(\"Link Title\") + \"&rarr;\");\n//         } else {\n//           link.html(\"&#128279;\");\n//         }\n//         var linkContainer = $(\"<div>\");\n//         linkContainer.append(link);\n//       }\n\n//       entry.append(title);\n//       entry.append(place);\n//       entry.append(location);\n//       entry.append(date);\n\n//       entry.append(subtitle);\n//       entry.append(description);\n//       entry.append(linkContainer);\n\n//       var category = (rowData.get(\"Category\"))[0].split(\" \").join(\"\");\n//       var sortedContainer = $(\"#about\"+category);\n//       sortedContainer.append(entry);\n//     }\n\n//     render() {\n//         this.setupPage()\n\n//       var rows = this.data.rows;\n\n//       var cvContainer = $(\"<div class='cvContainer'>\");\n\n//         for (var index in rows) {\n\n//             var row = rows[index];\n\n//         // CV entry basic requirements are Category and Title\n//         if (row.get(\"Category\")[0] === undefined) continue;\n//         if (row.get(\"Title\") === undefined) continue;\n\n//             // Add header if its missing\n//             var container;\n//         var category = (row.get(\"Category\")[0]).split(\" \").join(\"\");\n\n//             if ($(\"#about\"+category).length) {\n//                 container = $(\"#about\"+category)\n//             } else {\n//                 container = $(\"<div>\");\n//                 container.attr(\"id\", \"about\"+category);\n//           container.addClass(\"aboutContainer\")\n//                 var containerHeading = $(\"<div>\");\n//                 containerHeading.html(row.get(\"Category\")[0]);\n//           if (category) {\n//             containerHeading.addClass(\"aboutContainerHeading\");\n//           }\n//                 container.append(containerHeading);\n//                 cvContainer.append(container);\n//             }\n\n//         $(\"#page\").append(cvContainer);\n//         this.renderRow(row);\n//         }\n//     }\n//   }","map":{"version":3,"names":["React","useState","useEffect","CVPage","_ref","page","base","console","log","select","view","firstPage","err","records","error","recordsByCategory","forEach","record","category","get","undefined","append","pageTitle","createElement","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","style","flexDirection","gap","alignItems","justifyContent"],"sources":["/Users/samticknor/Portfolio-Site/src/components/CVPage.js"],"sourcesContent":["// React\nimport React, { useState, useEffect } from \"react\";\n\nfunction CVPage({ page, base }) {\n  console.log(\"re\");\n  useEffect(() => {\n    base(\"CV\")\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        const recordsByCategory = {};\n        records.forEach(function (record) {\n          const category = record.get(\"Category\")[0];\n          if (recordsByCategory[category] === undefined) {\n            recordsByCategory[category] = [record];\n          } else {\n            recordsByCategory[category] =\n              recordsByCategory[category].append(record);\n          }\n        });\n        console.log(recordsByCategory);\n      });\n  }, [page.pageTitle]);\n\n  return (\n    <div id={\"page\"}>\n      <div id=\"scrollContent\">\n        <div\n          className=\"pageContainer\"\n          style={{\n            flexDirection: \"row\",\n            gap: 50,\n            alignItems: \"flex-start\",\n            justifyContent: \"center\",\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n}\n\nexport default CVPage;\n\n// class CV extends Page {\n\n//     constructor(data) {\n//       super(data);\n//     }\n\n//     renderRow(rowData) {\n\n//       var entry = $(\"<div class='entryCV'>\");\n\n//       if (rowData.get(\"Title\")) {\n//         var title = $(\"<span class='titleCV'>\");\n//         title.html(rowData.get(\"Title\"));\n//       }\n\n//       if (rowData.get(\"Place\")) {\n//         var place = $(\"<span class='preDot placeCV'>\");\n//         place.html(rowData.get(\"Place\"));\n//       }\n\n//       if (rowData.get(\"City, State\")) {\n//         var location = $(\"<span class='preDot locationCV'>\");\n//         location.html(rowData.get(\"City, State\"));\n//       }\n\n//       if (rowData.get(\"Date(s)\")) {\n//         var date = $(\"<span class='preDot dateCV'>\");\n//         date.html(rowData.get(\"Date(s)\"));\n//       }\n\n//       if (rowData.get(\"Subtitle\")) {\n//         var subtitle = $(\"<div class='subtitleCV'>\");\n//         subtitle.html(rowData.get(\"Subtitle\"));\n//       }\n\n//       if (rowData.get(\"Description\")) {\n//         var description = $(\"<div class='descriptionCV'>\");\n//         description.html(rowData.get(\"Description\").replace(/\\n/g, \"<br/>\"));\n//       }\n\n//       if (rowData.get(\"Link\")) {\n//         var link = $(\"<a class='linkCV'>\");\n//         link.attr(\"href\", rowData.get(\"Link\"));\n//         link.attr(\"target\", \"_blank\");\n//         if (rowData.get(\"Link Title\")) {\n//           link.html(rowData.get(\"Link Title\") + \"&rarr;\");\n//         } else {\n//           link.html(\"&#128279;\");\n//         }\n//         var linkContainer = $(\"<div>\");\n//         linkContainer.append(link);\n//       }\n\n//       entry.append(title);\n//       entry.append(place);\n//       entry.append(location);\n//       entry.append(date);\n\n//       entry.append(subtitle);\n//       entry.append(description);\n//       entry.append(linkContainer);\n\n//       var category = (rowData.get(\"Category\"))[0].split(\" \").join(\"\");\n//       var sortedContainer = $(\"#about\"+category);\n//       sortedContainer.append(entry);\n//     }\n\n//     render() {\n//         this.setupPage()\n\n//       var rows = this.data.rows;\n\n//       var cvContainer = $(\"<div class='cvContainer'>\");\n\n//         for (var index in rows) {\n\n//             var row = rows[index];\n\n//         // CV entry basic requirements are Category and Title\n//         if (row.get(\"Category\")[0] === undefined) continue;\n//         if (row.get(\"Title\") === undefined) continue;\n\n//             // Add header if its missing\n//             var container;\n//         var category = (row.get(\"Category\")[0]).split(\" \").join(\"\");\n\n//             if ($(\"#about\"+category).length) {\n//                 container = $(\"#about\"+category)\n//             } else {\n//                 container = $(\"<div>\");\n//                 container.attr(\"id\", \"about\"+category);\n//           container.addClass(\"aboutContainer\")\n//                 var containerHeading = $(\"<div>\");\n//                 containerHeading.html(row.get(\"Category\")[0]);\n//           if (category) {\n//             containerHeading.addClass(\"aboutContainerHeading\");\n//           }\n//                 container.append(containerHeading);\n//                 cvContainer.append(container);\n//             }\n\n//         $(\"#page\").append(cvContainer);\n//         this.renderRow(row);\n//         }\n//     }\n//   }\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,MAAMA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;EAC1BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACjBN,SAAS,CAAC,YAAM;IACdI,IAAI,CAAC,IAAI,CAAC,CACPG,MAAM,CAAC;MAAEC,IAAI,EAAE;IAAY,CAAC,CAAC,CAC7BC,SAAS,CAAC,UAAUC,GAAG,EAAEC,OAAO,EAAE;MACjC,IAAID,GAAG,EAAE;QACPL,OAAO,CAACO,KAAK,CAACF,GAAG,CAAC;QAClB;MACF;MACA,IAAMG,iBAAiB,GAAG,CAAC,CAAC;MAC5BF,OAAO,CAACG,OAAO,CAAC,UAAUC,MAAM,EAAE;QAChC,IAAMC,QAAQ,GAAGD,MAAM,CAACE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAC1C,IAAIJ,iBAAiB,CAACG,QAAQ,CAAC,KAAKE,SAAS,EAAE;UAC7CL,iBAAiB,CAACG,QAAQ,CAAC,GAAG,CAACD,MAAM,CAAC;QACxC,CAAC,MAAM;UACLF,iBAAiB,CAACG,QAAQ,CAAC,GACzBH,iBAAiB,CAACG,QAAQ,CAAC,CAACG,MAAM,CAACJ,MAAM,CAAC;QAC9C;MACF,CAAC,CAAC;MACFV,OAAO,CAACC,GAAG,CAACO,iBAAiB,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,CAACV,IAAI,CAACiB,SAAS,CAAC,CAAC;EAEpB,oBACEtB,KAAA,CAAAuB,aAAA;IAAKC,EAAE,EAAE,MAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACd9B,KAAA,CAAAuB,aAAA;IAAKC,EAAE,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrB9B,KAAA,CAAAuB,aAAA;IACEQ,SAAS,EAAC,eAAe;IACzBC,KAAK,EAAE;MACLC,aAAa,EAAE,KAAK;MACpBC,GAAG,EAAE,EAAE;MACPC,UAAU,EAAE,YAAY;MACxBC,cAAc,EAAE;IAClB,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACE,CACH,CACF,CAAC;AAEV;AAEA,eAAe3B,MAAM;;AAErB;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}