{"ast":null,"code":"var _jsxFileName = \"/Users/samticknor/Portfolio-Site/src/App.js\",\n  _s = $RefreshSig$();\n// React\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, HashRouter, Route, Link } from \"react-router-dom\";\n\n// Helmet\nimport Helmet from \"react-helmet\";\n\n// Screens\nimport Home from \"./components/Home\";\nimport PageInstallation from \"./components/PageInstallation\";\nimport PageProcess from \"./components/PageProcess\";\nimport PageCollections from \"./components/PageCollections\";\nimport PageDateCollections from \"./components/PageDateCollections\";\nimport PageAbout from \"./components/PageAbout\";\nimport PageContact from \"./components/PageContact\";\nimport PageCV from \"./components/PageCV\";\n\n// Style\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // Site-Wide State\n  const [siteTitle, setSiteTitle] = useState(\"Sam Ticknor\");\n  const [siteFavicon, setSiteFavicon] = useState(\"ðŸ”…\");\n  const [homeSplashImages, setHomeSplashImages] = useState([]);\n  const [collections, setCollections] = useState([]);\n  const [dateCollections, setDateCollections] = useState({});\n  const [processPosts, setProcessPosts] = useState([]);\n  const [allWorksById, setAllWorksById] = useState({});\n  const [installations, setInstallations] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // AIRTABLE CONTENT\n  var Airtable = require(\"airtable\");\n  Airtable.configure({\n    endpointUrl: \"https://api.airtable.com\",\n    apiKey: \"pattHY0czY5YOotHV.e0784aa4aa945b3303da15e14c71b08f80cdf91802cc481c260c880ec890af04\" // a read-only key\n  });\n  const base = Airtable.base(\"apptr77RaXLy74iuy\");\n  useEffect(() => {\n    // Get information from about table\n    base(\"About\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      let _siteTitle;\n      let _siteFavicon;\n      let _homeSplashImages;\n      records.forEach(function (record) {\n        _siteTitle = record.get(\"Site Title\");\n        _homeSplashImages = record.get(\"Splash Images\");\n        _siteFavicon = record.get(\"Emoji Favicon\");\n      });\n      setSiteTitle(_siteTitle);\n      setSiteFavicon(_siteFavicon);\n      setHomeSplashImages(_homeSplashImages);\n    });\n\n    // Get information from process table\n    base(\"Process\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      let _processPosts = [];\n      records.forEach(function (record) {\n        const postImages = record.get(\"Images\");\n        if (record.get(\"Show On Page\")) {\n          _processPosts.push({\n            date: record.get(\"Date\"),\n            imageLinks: postImages.map(workImage => {\n              return workImage.url;\n            }),\n            text: record.get(\"Text\")\n          });\n        }\n      });\n      setProcessPosts(_processPosts);\n    });\n\n    // Get all works from works table\n    // Put into object that can be referenced by ID\n    let _allWorksById = {};\n    let _dateCollections = {};\n    base(\"Works\").select({\n      view: \"Grid view\"\n    }).eachPage(function page(records, fetchNextPage) {\n      records.forEach(function (record) {\n        // put work into dictionary indexed by ID\n        const workImages = record.get(\"Image\");\n        _allWorksById[record.id] = {\n          imageLink: workImages && workImages.length > 0 ? workImages[0].url : undefined,\n          videoLink: record.get(\"Video Link\"),\n          title: record.get(\"Title\"),\n          year: record.get(\"Year\"),\n          medium: record.get(\"Medium\"),\n          width: record.get(\"Width\"),\n          height: record.get(\"Height\"),\n          depth: record.get(\"Depth\"),\n          description: record.get(\"Description\")\n        };\n\n        // if work belongs to a year collection,\n        // put into year dictionary\n        // { 2024: [id, id, id], 2023: [id, id, id], 2016: [id, id, id]}}\n        let workDate = record.get(\"Date Collection\");\n        console.log(workDate);\n        if (workDate !== undefined && workDate !== \"\") {\n          if (_dateCollections[workDate]) {\n            _dateCollections[workDate].push(record.id);\n          } else {\n            _dateCollections[workDate] = [record.id];\n          }\n        }\n      });\n      fetchNextPage();\n    }, function done(err) {\n      console.log(_allWorksById);\n      setAllWorksById({\n        ..._allWorksById\n      });\n      setDateCollections({\n        ..._dateCollections\n      });\n      if (err) {\n        console.error(err);\n        return;\n      }\n    });\n  }, []);\n\n  // Once all works are retrieved,\n  // Get menu items from index tables,\n  // To build routes and pages\n  useEffect(() => {\n    base(\"Collections Index\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      if (err) {\n        console.error(err);\n        return;\n      }\n      const _collections = [];\n      records.forEach(record => {\n        _collections.push({\n          route: record.get(\"Route\"),\n          title: record.get(\"Title\"),\n          tableName: record.get(\"Title\"),\n          showInMenu: record.get(\"Show In Menu\"),\n          years: record.get(\"Years\"),\n          collectionStatement: record.get(\"Collection Statement\")\n        });\n      });\n      setCollections([..._collections]);\n      setIsLoading(false);\n    });\n    base(\"Installations Index\").select({\n      view: \"Grid view\"\n    }).firstPage(function (err, records) {\n      console.log(records);\n      if (err) {\n        console.error(err);\n        return;\n      }\n      const _installations = [];\n      records.forEach(record => {\n        const installationImage = record.get(\"Image\");\n        _installations.push({\n          route: record.get(\"Route\"),\n          title: record.get(\"Title\"),\n          tableName: record.get(\"Title\"),\n          showInMenu: record.get(\"Show In Menu\"),\n          link: record.get(\"Link\"),\n          dates: record.get(\"Dates\"),\n          location: record.get(\"Location\"),\n          imageLink: installationImage && installationImage.length > 0 ? installationImage[0].url : undefined\n        });\n      });\n      setInstallations(_installations);\n      setIsLoading(false);\n    });\n  }, [allWorksById]);\n\n  // MARKUP\n  if (isLoading) return null;\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    basename: \"/\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: siteTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: `data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${siteFavicon}</text></svg>`,\n        sizes: \"16x16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        height: \"64px\",\n        background: \"#f7f7f2\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        zIndex: 101\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          gap: \"32px\",\n          padding: \"0px 32px\"\n        },\n        class: \"mobileStack\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: \"none\",\n            fontWeight: 600,\n            color: \"black\",\n            fontSize: \"18px\"\n          },\n          to: \"/\",\n          children: \"Sam Ticknor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            gap: \"32px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            style: {\n              textDecoration: \"none\",\n              color: \"black\"\n            },\n            to: \"/\",\n            children: \"Works\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), processPosts.length > 0 && /*#__PURE__*/_jsxDEV(Link, {\n            style: {\n              textDecoration: \"none\",\n              color: \"black\"\n            },\n            to: \"/process\",\n            children: \"Process\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            style: {\n              textDecoration: \"none\",\n              color: \"black\"\n            },\n            to: \"/about\",\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            style: {\n              textDecoration: \"none\",\n              color: \"black\"\n            },\n            to: \"/contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/CV\",\n        element: /*#__PURE__*/_jsxDEV(PageCV, {\n          base: base,\n          page: {\n            pageTitle: \"CV\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), Object.keys(dateCollections).map(dateCollectionID => {\n        let collection = dateCollections[dateCollectionID];\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: `${dateCollectionID}`,\n          element: /*#__PURE__*/_jsxDEV(PageDateCollections, {\n            base: base,\n            works: collection,\n            date: dateCollectionID,\n            allWorksById: allWorksById\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)\n        }, `${dateCollectionID}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this);\n      }), collections.map(collection => {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: `${collection.route}`,\n          element: /*#__PURE__*/_jsxDEV(PageCollections, {\n            base: base,\n            collection: collection,\n            allWorksById: allWorksById\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)\n        }, `${collection.route}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this);\n      }), installations.map(installation => {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: `${installation.route}`,\n          element: /*#__PURE__*/_jsxDEV(PageInstallation, {\n            base: base,\n            page: installation,\n            allWorksById: allWorksById\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this)\n        }, `${installation.route}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"process\",\n        element: /*#__PURE__*/_jsxDEV(PageProcess, {\n          posts: processPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 20\n        }, this)\n      }, \"process\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"about\",\n        element: /*#__PURE__*/_jsxDEV(PageAbout, {\n          base: base\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 20\n        }, this)\n      }, \"about\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"contact\",\n        element: /*#__PURE__*/_jsxDEV(PageContact, {\n          base: base\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 20\n        }, this)\n      }, \"contact\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          splashImages: homeSplashImages,\n          collections: collections,\n          dateCollections: dateCollections,\n          installations: installations,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, window.location.pathname, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5tL2+3jatTzYkvSa3r3iefHQsGw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","HashRouter","Route","Link","Helmet","Home","PageInstallation","PageProcess","PageCollections","PageDateCollections","PageAbout","PageContact","PageCV","jsxDEV","_jsxDEV","App","_s","siteTitle","setSiteTitle","siteFavicon","setSiteFavicon","homeSplashImages","setHomeSplashImages","collections","setCollections","dateCollections","setDateCollections","processPosts","setProcessPosts","allWorksById","setAllWorksById","installations","setInstallations","isLoading","setIsLoading","Airtable","require","configure","endpointUrl","apiKey","base","select","view","firstPage","err","records","console","error","_siteTitle","_siteFavicon","_homeSplashImages","forEach","record","get","_processPosts","postImages","push","date","imageLinks","map","workImage","url","text","_allWorksById","_dateCollections","eachPage","page","fetchNextPage","workImages","id","imageLink","length","undefined","videoLink","title","year","medium","width","height","depth","description","workDate","log","done","_collections","route","tableName","showInMenu","years","collectionStatement","_installations","installationImage","link","dates","location","basename","children","fileName","_jsxFileName","lineNumber","columnNumber","rel","href","sizes","style","position","top","left","right","background","display","justifyContent","zIndex","alignItems","gap","padding","class","textDecoration","fontWeight","color","fontSize","to","path","element","pageTitle","Object","keys","dateCollectionID","collection","works","installation","posts","splashImages","window","pathname","_c","$RefreshReg$"],"sources":["/Users/samticknor/Portfolio-Site/src/App.js"],"sourcesContent":["// React\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, HashRouter, Route, Link } from \"react-router-dom\";\n\n// Helmet\nimport Helmet from \"react-helmet\";\n\n// Screens\nimport Home from \"./components/Home\";\nimport PageInstallation from \"./components/PageInstallation\";\nimport PageProcess from \"./components/PageProcess\";\nimport PageCollections from \"./components/PageCollections\";\nimport PageDateCollections from \"./components/PageDateCollections\";\nimport PageAbout from \"./components/PageAbout\";\nimport PageContact from \"./components/PageContact\";\nimport PageCV from \"./components/PageCV\";\n\n// Style\nimport \"./App.css\";\n\nexport default function App() {\n  // Site-Wide State\n  const [siteTitle, setSiteTitle] = useState(\"Sam Ticknor\");\n  const [siteFavicon, setSiteFavicon] = useState(\"ðŸ”…\");\n  const [homeSplashImages, setHomeSplashImages] = useState([]);\n  const [collections, setCollections] = useState([]);\n  const [dateCollections, setDateCollections] = useState({});\n  const [processPosts, setProcessPosts] = useState([]);\n  const [allWorksById, setAllWorksById] = useState({});\n  const [installations, setInstallations] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // AIRTABLE CONTENT\n  var Airtable = require(\"airtable\");\n  Airtable.configure({\n    endpointUrl: \"https://api.airtable.com\",\n    apiKey:\n      \"pattHY0czY5YOotHV.e0784aa4aa945b3303da15e14c71b08f80cdf91802cc481c260c880ec890af04\", // a read-only key\n  });\n  const base = Airtable.base(\"apptr77RaXLy74iuy\");\n\n  useEffect(() => {\n    // Get information from about table\n    base(\"About\")\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        let _siteTitle;\n        let _siteFavicon;\n        let _homeSplashImages;\n        records.forEach(function (record) {\n          _siteTitle = record.get(\"Site Title\");\n          _homeSplashImages = record.get(\"Splash Images\");\n          _siteFavicon = record.get(\"Emoji Favicon\");\n        });\n        setSiteTitle(_siteTitle);\n        setSiteFavicon(_siteFavicon);\n        setHomeSplashImages(_homeSplashImages);\n      });\n\n    // Get information from process table\n    base(\"Process\")\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        let _processPosts = [];\n        records.forEach(function (record) {\n          const postImages = record.get(\"Images\");\n          if (record.get(\"Show On Page\")) {\n            _processPosts.push({\n              date: record.get(\"Date\"),\n              imageLinks: postImages.map((workImage) => {\n                return workImage.url;\n              }),\n              text: record.get(\"Text\"),\n            });\n          }\n        });\n        setProcessPosts(_processPosts);\n      });\n\n    // Get all works from works table\n    // Put into object that can be referenced by ID\n    let _allWorksById = {};\n    let _dateCollections = {};\n    base(\"Works\")\n      .select({\n        view: \"Grid view\",\n      })\n      .eachPage(\n        function page(records, fetchNextPage) {\n          records.forEach(function (record) {\n            // put work into dictionary indexed by ID\n            const workImages = record.get(\"Image\");\n            _allWorksById[record.id] = {\n              imageLink:\n                workImages && workImages.length > 0\n                  ? workImages[0].url\n                  : undefined,\n              videoLink: record.get(\"Video Link\"),\n              title: record.get(\"Title\"),\n              year: record.get(\"Year\"),\n              medium: record.get(\"Medium\"),\n              width: record.get(\"Width\"),\n              height: record.get(\"Height\"),\n              depth: record.get(\"Depth\"),\n              description: record.get(\"Description\"),\n            };\n\n            // if work belongs to a year collection,\n            // put into year dictionary\n            // { 2024: [id, id, id], 2023: [id, id, id], 2016: [id, id, id]}}\n            let workDate = record.get(\"Date Collection\");\n            console.log(workDate);\n            if (workDate !== undefined && workDate !== \"\") {\n              if (_dateCollections[workDate]) {\n                _dateCollections[workDate].push(record.id);\n              } else {\n                _dateCollections[workDate] = [record.id];\n              }\n            }\n          });\n          fetchNextPage();\n        },\n        function done(err) {\n          console.log(_allWorksById);\n          setAllWorksById({ ..._allWorksById });\n          setDateCollections({ ..._dateCollections });\n\n          if (err) {\n            console.error(err);\n            return;\n          }\n        }\n      );\n  }, []);\n\n  // Once all works are retrieved,\n  // Get menu items from index tables,\n  // To build routes and pages\n  useEffect(() => {\n    base(\"Collections Index\")\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        const _collections = [];\n        records.forEach((record) => {\n          _collections.push({\n            route: record.get(\"Route\"),\n            title: record.get(\"Title\"),\n            tableName: record.get(\"Title\"),\n            showInMenu: record.get(\"Show In Menu\"),\n            years: record.get(\"Years\"),\n            collectionStatement: record.get(\"Collection Statement\"),\n          });\n        });\n        setCollections([..._collections]);\n        setIsLoading(false);\n      });\n\n    base(\"Installations Index\")\n      .select({ view: \"Grid view\" })\n      .firstPage(function (err, records) {\n        console.log(records);\n        if (err) {\n          console.error(err);\n          return;\n        }\n        const _installations = [];\n        records.forEach((record) => {\n          const installationImage = record.get(\"Image\");\n          _installations.push({\n            route: record.get(\"Route\"),\n            title: record.get(\"Title\"),\n            tableName: record.get(\"Title\"),\n            showInMenu: record.get(\"Show In Menu\"),\n            link: record.get(\"Link\"),\n            dates: record.get(\"Dates\"),\n            location: record.get(\"Location\"),\n            imageLink:\n              installationImage && installationImage.length > 0\n                ? installationImage[0].url\n                : undefined,\n          });\n        });\n        setInstallations(_installations);\n        setIsLoading(false);\n      });\n  }, [allWorksById]);\n\n  // MARKUP\n  if (isLoading) return null;\n  return (\n    <HashRouter basename=\"/\" key={window.location.pathname}>\n      <Helmet>\n        <title>{siteTitle}</title>\n        <link\n          rel=\"icon\"\n          href={`data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${siteFavicon}</text></svg>`}\n          sizes=\"16x16\"\n        />\n      </Helmet>\n\n      {/* NAV BAR */}\n      <div\n        style={{\n          position: \"fixed\",\n          top: 0,\n          left: 0,\n          right: 0,\n          height: \"64px\",\n          background: \"#f7f7f2\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          zIndex: 101,\n        }}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            gap: \"32px\",\n            padding: \"0px 32px\",\n          }}\n          class=\"mobileStack\"\n        >\n          <Link\n            style={{\n              textDecoration: \"none\",\n              fontWeight: 600,\n              color: \"black\",\n              fontSize: \"18px\",\n            }}\n            to=\"/\"\n          >\n            Sam Ticknor\n          </Link>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-start\",\n              gap: \"32px\",\n            }}\n          >\n            <Link\n              style={{\n                textDecoration: \"none\",\n                color: \"black\",\n              }}\n              to=\"/\"\n            >\n              Works\n            </Link>\n            {processPosts.length > 0 && (\n              <Link\n                style={{\n                  textDecoration: \"none\",\n                  color: \"black\",\n                }}\n                to=\"/process\"\n              >\n                Process\n              </Link>\n            )}\n            <Link\n              style={{\n                textDecoration: \"none\",\n                color: \"black\",\n              }}\n              to=\"/about\"\n            >\n              About\n            </Link>\n            <Link\n              style={{\n                textDecoration: \"none\",\n                color: \"black\",\n              }}\n              to=\"/contact\"\n            >\n              Contact\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <Routes>\n        <Route\n          path=\"/CV\"\n          element={<PageCV base={base} page={{ pageTitle: \"CV\" }} />}\n        />\n\n        {Object.keys(dateCollections).map((dateCollectionID) => {\n          let collection = dateCollections[dateCollectionID];\n          return (\n            <Route\n              key={`${dateCollectionID}`}\n              path={`${dateCollectionID}`}\n              element={\n                <PageDateCollections\n                  base={base}\n                  works={collection}\n                  date={dateCollectionID}\n                  allWorksById={allWorksById}\n                />\n              }\n            />\n          );\n        })}\n\n        {collections.map((collection) => {\n          return (\n            <Route\n              key={`${collection.route}`}\n              path={`${collection.route}`}\n              element={\n                <PageCollections\n                  base={base}\n                  collection={collection}\n                  allWorksById={allWorksById}\n                />\n              }\n            />\n          );\n        })}\n\n        {installations.map((installation) => {\n          return (\n            <Route\n              key={`${installation.route}`}\n              path={`${installation.route}`}\n              element={\n                <PageInstallation\n                  base={base}\n                  page={installation}\n                  allWorksById={allWorksById}\n                />\n              }\n            />\n          );\n        })}\n\n        <Route\n          key={\"process\"}\n          path={\"process\"}\n          element={<PageProcess posts={processPosts} />}\n        />\n\n        <Route\n          key={\"about\"}\n          path={\"about\"}\n          element={<PageAbout base={base} />}\n        />\n\n        <Route\n          key={\"contact\"}\n          path={\"contact\"}\n          element={<PageContact base={base} />}\n        />\n\n        <Route\n          path=\"/\"\n          element={\n            <Home\n              splashImages={homeSplashImages}\n              collections={collections}\n              dateCollections={dateCollections}\n              installations={installations}\n              isLoading={isLoading}\n            />\n          }\n        />\n      </Routes>\n    </HashRouter>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}