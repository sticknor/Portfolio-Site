{"ast":null,"code":"var _jsxFileName = \"/Users/samticknor/Portfolio-Site/src/components/PageCollections.js\",\n  _s = $RefreshSig$();\n// React\nimport React, { useState, useEffect } from \"react\";\nimport { ImageFullWork } from \"./modules/ImageOnlyModules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PageCollections({\n  page,\n  base,\n  allworks\n}) {\n  _s();\n  const [works, setWorks] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    console.log(allworks);\n    console.log(page);\n    console.log(base);\n    if (allworks === undefined) setIsLoading(true);else {\n      if (document.querySelector(\"#scrollContent\")) {\n        document.querySelector(\"#page\").scrollTop = 0;\n      }\n      const title = page[\"Title\"];\n      console.log(\"TITLE\");\n      console.log(title);\n      base(title).select({\n        view: \"Grid view\"\n      }).firstPage(function (err, records) {\n        if (err) {\n          console.error(err);\n          return;\n        }\n        let _works = [];\n        records.forEach(function (record) {\n          let workId = record.get(\"Work\")[0];\n          let work = allworks[workId];\n          _works.push(work);\n          console.log(allworks);\n        });\n        setWorks(_works);\n      });\n    }\n  }, []);\n  if (isLoading === undefined) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"scrollContent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(PageCollections, \"1tN9J4ibrnkt+fdpREKYNpA8UdQ=\");\n_c = PageCollections;\nexport default PageCollections;\nvar _c;\n$RefreshReg$(_c, \"PageCollections\");","map":{"version":3,"names":["React","useState","useEffect","ImageFullWork","jsxDEV","_jsxDEV","PageCollections","page","base","allworks","_s","works","setWorks","undefined","isLoading","setIsLoading","console","log","document","querySelector","scrollTop","title","select","view","firstPage","err","records","error","_works","forEach","record","workId","get","work","push","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samticknor/Portfolio-Site/src/components/PageCollections.js"],"sourcesContent":["// React\nimport React, { useState, useEffect } from \"react\";\nimport { ImageFullWork } from \"./modules/ImageOnlyModules\";\n\nfunction PageCollections({ page, base, allworks }) {\n  const [works, setWorks] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    console.log(allworks);\n    console.log(page);\n    console.log(base);\n    if (allworks === undefined) setIsLoading(true);\n    else {\n      if (document.querySelector(\"#scrollContent\")) {\n        document.querySelector(\"#page\").scrollTop = 0;\n      }\n\n      const title = page[\"Title\"];\n      console.log(\"TITLE\");\n      console.log(title);\n\n      base(title)\n        .select({ view: \"Grid view\" })\n        .firstPage(function (err, records) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n          let _works = [];\n          records.forEach(function (record) {\n            let workId = record.get(\"Work\")[0];\n            let work = allworks[workId];\n            _works.push(work);\n            console.log(allworks);\n          });\n          setWorks(_works);\n        });\n    }\n  }, []);\n\n  if (isLoading === undefined) return null;\n\n  return (\n    <div id={\"page\"}>\n      <div id=\"scrollContent\">\n        {/* {works.map((work, index) => {\n          console.log(index);\n          console.log(work);\n          return (\n            <ImageFullWork key={work.get(\"Title\")} work={work} base={base} />\n          );\n        })} */}\n      </div>\n    </div>\n  );\n}\n\nexport default PageCollections;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,eAAeA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACY,SAAS,CAAC;EAC7C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;IACrBO,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;IACjBS,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;IACjB,IAAIC,QAAQ,KAAKI,SAAS,EAAEE,YAAY,CAAC,IAAI,CAAC,CAAC,KAC1C;MACH,IAAIG,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC,EAAE;QAC5CD,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAACC,SAAS,GAAG,CAAC;MAC/C;MAEA,MAAMC,KAAK,GAAGd,IAAI,CAAC,OAAO,CAAC;MAC3BS,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBD,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MAElBb,IAAI,CAACa,KAAK,CAAC,CACRC,MAAM,CAAC;QAAEC,IAAI,EAAE;MAAY,CAAC,CAAC,CAC7BC,SAAS,CAAC,UAAUC,GAAG,EAAEC,OAAO,EAAE;QACjC,IAAID,GAAG,EAAE;UACPT,OAAO,CAACW,KAAK,CAACF,GAAG,CAAC;UAClB;QACF;QACA,IAAIG,MAAM,GAAG,EAAE;QACfF,OAAO,CAACG,OAAO,CAAC,UAAUC,MAAM,EAAE;UAChC,IAAIC,MAAM,GAAGD,MAAM,CAACE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;UAClC,IAAIC,IAAI,GAAGxB,QAAQ,CAACsB,MAAM,CAAC;UAC3BH,MAAM,CAACM,IAAI,CAACD,IAAI,CAAC;UACjBjB,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;QACvB,CAAC,CAAC;QACFG,QAAQ,CAACgB,MAAM,CAAC;MAClB,CAAC,CAAC;IACN;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAId,SAAS,KAAKD,SAAS,EAAE,OAAO,IAAI;EAExC,oBACER,OAAA;IAAK8B,EAAE,EAAE,MAAO;IAAAC,QAAA,eACd/B,OAAA;MAAK8B,EAAE,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQlB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CApDQJ,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AAsDxB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}